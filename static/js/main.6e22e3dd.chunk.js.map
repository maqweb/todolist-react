{"version":3,"sources":["assets/trash.svg","serviceWorker.js","components/TodoListTasks/Task/Task.jsx","components/TodoListTasks/TodoListTasks.jsx","components/TodoListFooter/TodoListFooter.jsx","components/TodoListHeader/TodoListTitle.jsx","components/TodoListHeader/AddNewItemForm.jsx","api/api.js","store/reducer.js","TodoList.jsx","App.js","store/store.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Task","state","editMode","title","_this","props","task","onIsDoneChanged","e","currentTarget","checked","changeStatus","id","onTitleChanged","setState","value","activateEditMode","deactivateEditMode","changeTitle","onDeleteTask","onRemoveTask","render","isDoneClass","status","priorityTitle","priority","react_default","a","createElement","className","type","onChange","onBlur","autoFocus","onClick","src","delIcon","alt","React","Component","TodoListTasks","tasksElement","tasks","map","TodoListTasks_Task_Task","key","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","onHideFiltersClick","classForAll","filterValue","classForCompleted","classForActive","TodoListTitle","onChangeTodolistTitle","onRemoveTodolist","AddNewItemForm","error","onAddItemClick","newTitle","trim","addItem","onInputChange","onKeyPress","errorClass","concat","placeholder","instance","axios","create","withCredentials","baseURL","headers","API-KEY","api","get","todolistId","post","delete","taskId","updatedTask","put","initialState","todolists","reducer","arguments","length","undefined","action","_objectSpread","tl","newTodolist","Object","toConsumableArray","filter","newTask","t","TodoList","newFilterValue","restoreState","getTasks","addTask","onChangeTask","changeTodolistTitle","obj","find","TodoList_objectSpread","description","completed","startDate","deadline","changeTask","removeTodolist","removeTask","_this$props$tasks","TodoListHeader_TodoListTitle","TodoListHeader_AddNewItemForm","components_TodoListTasks_TodoListTasks","getFilterTasks","components_TodoListFooter_TodoListFooter","this","ConnectedTodolist","connect","dispatch","thunk","then","res","allTasks","data","items","getTasksTC","item","addTaskAC","addTaskTC","updateTaskAC","updateTaskTC","removeTodolistAC","removeTodolistTC","removeTaskAC","removeTaskTC","changeTodolistTitleAC","changeTodolistTitleTC","App","getTodolists","addTodoList","addTodolist","todoLists","src_TodoList","Fragment","ConnectedApp","addTodolistAC","addTodolistTC","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e22e3dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trash.665926e2.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport delIcon from \"../../../assets/trash.svg\";\r\n\r\nclass Task extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        title: this.props.task.title\r\n    };\r\n\r\n    onIsDoneChanged = (e) => {\r\n        let status = e.currentTarget.checked ? 2 : 0;\r\n        switch (status) {\r\n            case 2:\r\n                let trueStatus = 2;\r\n                return this.props.changeStatus(this.props.task.id, trueStatus);\r\n            default:\r\n                let falseStatus = 0;\r\n                return this.props.changeStatus(this.props.task.id, falseStatus);\r\n        }\r\n    };\r\n\r\n    onTitleChanged = (e) => {\r\n        this.setState({\r\n            title: e.currentTarget.value\r\n        })\r\n    };\r\n\r\n    activateEditMode = () => {\r\n        this.setState({editMode: true})\r\n    };\r\n\r\n    deactivateEditMode = () => {\r\n        this.props.changeTitle(this.props.task.id, this.state.title);\r\n        this.setState({editMode: false})\r\n    };\r\n\r\n    onDeleteTask = () => {\r\n        this.props.onRemoveTask(this.props.task.id);\r\n    };\r\n\r\n    render = () => {\r\n\r\n        // let priorityClass = this.props.task.priority === 'high' ? 'highPriority' :\r\n        //     this.props.task.priority === 'medium' ? 'mediumPriority' :\r\n        //         this.props.task.priority === 'low' ? 'lowPriority' : 'noPriority';\r\n\r\n        let isDoneClass = this.props.task.status === 2 ? 'done' : '';\r\n\r\n        let priorityTitle = '';\r\n        switch (this.props.task.priority) {\r\n            case 0:\r\n                priorityTitle = \"Low\";\r\n                break;\r\n            case 1:\r\n                priorityTitle = \"Middle\";\r\n                break;\r\n            case 2:\r\n                priorityTitle = \"High\";\r\n                break;\r\n            case 3:\r\n                priorityTitle = \"Urgently\";\r\n                break;\r\n            case 4:\r\n                priorityTitle = \"Later\";\r\n                break;\r\n            default:\r\n                priorityTitle = '';\r\n        }\r\n\r\n        return (\r\n            <div className='todoList-task'>\r\n                <div>\r\n                    <input type='checkbox'\r\n                           checked={this.props.task.status === 2}\r\n                           onChange={this.onIsDoneChanged}/>\r\n\r\n                    {this.state.editMode ?\r\n                        <input onBlur={this.deactivateEditMode}\r\n                               autoFocus={true}\r\n                               onChange={this.onTitleChanged}\r\n                               value={this.state.title} type=\"text\"/>\r\n\r\n                        : <span onClick={this.activateEditMode}\r\n                                className={isDoneClass}> {this.state.title}</span>}\r\n                    <span> - priority: {priorityTitle}</span>\r\n                </div>\r\n                <button className=\"btn-task\" onClick={this.onDeleteTask}>\r\n                    <img className='del-icon' src={delIcon} alt=\"\"/>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Task;\r\n\r\nTask.propTypes = {\r\n    title: PropTypes.string\r\n};","import React from \"react\";\nimport Task from \"./Task/Task\";\n\nclass TodoListTasks extends React.Component {\n\n    render = () => {\n\n        const tasksElement = this.props.tasks.map(task => {\n            return <Task key={task.id}\n                         task={task}\n                         changeStatus={this.props.changeStatus}\n                         changeTitle={this.props.changeTitle}\n                         onRemoveTask={this.props.onRemoveTask}/>\n        });\n\n        return (\n            <div className=\"todoList-tasks\">\n                {tasksElement}\n            </div>\n        );\n    }\n}\n\nexport default TodoListTasks;\n","import React from 'react';\nimport './../../App.css';\nimport PropTypes from 'prop-types';\n\nclass TodoListFooter extends React.Component {\n\n    state = {\n      isHidden: false\n    };\n\n    onAllFilterClick = () => {\n        this.props.changeFilter('All')\n    };\n    onCompletedFilterClick = () => {\n        this.props.changeFilter('Completed')\n    };\n    onActiveFilterClick = () => {\n        this.props.changeFilter('Active')\n    };\n\n    onShowFiltersClick = () => {\n        this.setState({isHidden: true})\n    };\n    onHideFiltersClick = () => {\n        this.setState({isHidden: false})\n    };\n\n    render = (props) => {\n\n        let classForAll = this.props.filterValue === \"All\" ? \"active\" : \"\";\n        let classForCompleted = this.props.filterValue === \"Completed\" ? \"active\" : \"\";\n        let classForActive = this.props.filterValue === \"Active\" ? \"active\" : \"\";\n\n        return (\n            <div className=\"todoList-footer\">\n\n                {!this.state.isHidden && <button onClick={this.onShowFiltersClick}>hide</button>}\n                {this.state.isHidden && <button onClick={this.onHideFiltersClick}>show</button>}\n\n                {!this.state.isHidden && <div className='filter-buttons'>\n                    <button onClick={this.onAllFilterClick} className={classForAll}>All</button>\n                    <button onClick={this.onCompletedFilterClick} className={classForCompleted}>Completed</button>\n                    <button onClick={this.onActiveFilterClick} className={classForActive}>Active</button>\n                </div>}\n\n\n\n            </div>\n        );\n    }\n}\n\nexport default TodoListFooter;\n\nTodoListFooter.propTypes = {\n    filterValue: PropTypes.string\n};","import React from 'react';\nimport '../../App.css'\nimport delIcon from './../../assets/trash.svg'\n\nclass TodoListTitle extends React.Component {\n\n    state = {\n        editMode: false,\n        title: this.props.title\n    };\n\n    activateEditMode = () => {\n        this.setState({editMode: true})\n    };\n\n    deactivateEditMode = () => {\n        this.setState({editMode: false});\n        this.props.onChangeTodolistTitle(this.props.id, this.state.title)\n    };\n\n    onTitleChanged = (e) => {\n        this.setState({title: e.currentTarget.value});\n    };\n\n    render = () => {\n        return (\n                <div className=\"todolist-title\">\n                    {this.state.editMode\n                        ? <input value={this.state.title}\n                                 className='editTitleInput'\n                                 onBlur={this.deactivateEditMode}\n                                 onChange={this.onTitleChanged}\n                                 autoFocus={true} type=\"text\"/>\n                        : <h3 className=\"todoList-header__title\"\n                              onClick={this.activateEditMode}>{this.state.title}</h3>}\n\n                    <button onClick={this.props.onRemoveTodolist} className=\"btn btn-title\">\n                        <img className='del-icon' src={delIcon} alt=\"\"/>\n                    </button>\n                </div>\n        );\n    }\n}\n\nexport default TodoListTitle;\n","import React from 'react';\nimport '../../App.css'\n\nclass AddNewItemForm extends React.Component {\n\n    state = {\n        error: false,\n        title: ''\n    };\n\n    onAddItemClick = () => {\n        let newTitle = this.state.title;\n        this.setState({title: ''});\n        if (newTitle.trim() === '') {\n            this.setState({\n                error: true\n            })\n        } else {\n            this.props.addItem(newTitle);\n            this.setState({\n                error: false\n            })\n        }\n    };\n\n    onInputChange = (e) => {\n        this.setState({\n            error: false,\n            title: e.currentTarget.value\n        });\n    };\n\n    onKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            this.onAddItemClick();\n            this.setState({\n                title: ''\n            })\n        }\n    };\n\n    render = () => {\n\n        let errorClass = this.state.error === true ? 'error' : '';\n\n        return (\n            <div className=\"todoList-newTaskForm\">\n\n                <input type=\"text\"\n                       onChange={this.onInputChange}\n                       onKeyPress={this.onKeyPress}\n                       className={`input ${errorClass}`}\n                       value={this.state.title}\n                       placeholder=\"New item name\"/>\n\n                <button onClick={this.onAddItemClick}>Add</button>\n            </div>\n        );\n    }\n}\n\nexport default AddNewItemForm;\n\n","import axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.1/todo-lists/`,\n    headers: {'API-KEY': '6ab52400-1718-48c6-9e57-f24fa6232ed9'}\n});\n\nexport const api = {\n    getTodolists() {\n        return instance.get(``)\n    },\n    getTasks(todolistId) {\n        return instance.get(`${todolistId}/tasks`)\n    },\n    addTodoList(newTitle) {\n        return instance.post(``, {title: newTitle})\n    },\n    addItem(todolistId, newTitle) {\n        return instance.post(`${todolistId}/tasks`, {title: newTitle})\n    },\n    removeTodolist(todolistId) {\n        return instance.delete(`${todolistId}`)\n    },\n    removeTask(todolistId, taskId) {\n        return instance.delete(`${todolistId}/tasks/${taskId}`)\n    },\n    changeTask(todolistId, taskId, updatedTask) {\n        return instance.put(`${todolistId}/tasks/${taskId}`, updatedTask)\n    },\n    changeTodolistTitle(todolistId, newTitle) {\n        return instance.put(`${todolistId}`, {title: newTitle})\n    }\n};","import {api} from \"../api/api\";\n\nexport const ADD_TODOLIST = 'ADD-TODOLIST';\nexport const REMOVE_TODOLIST = 'REMOVE-TODOLIST';\nexport const ADD_TASK = 'ADD-TASK';\nexport const SET_TASKS = 'SET_TASKS';\nexport const REMOVE_TASK = 'REMOVE-TASK';\nexport const CHANGE_TASK = 'CHANGE-TASK';\nexport const SET_TODOLIST = 'SET_TODOLIST';\nexport const CHANGE_TODOLIST_TITLE = 'CHANGE_TODOLIST_TITLE';\n\nconst initialState = {\n    todolists: []\n};\n\nconst reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case SET_TODOLIST:\n            return {\n                ...state,\n                todolists: action.todolists.map(tl => ({...tl, tasks: []}))\n            };\n\n        case ADD_TODOLIST:\n            return {\n                ...state,\n                todolists: [action.newTodolist, ...state.todolists]\n            };\n\n        case REMOVE_TODOLIST:\n            return {\n                ...state,\n                todolists: state.todolists.filter(tl => tl.id !== action.todolistId)\n            };\n\n        case CHANGE_TODOLIST_TITLE:\n            return {\n                ...state,\n                todolists: state.todolists.map(tl => {\n                    if (tl.id === action.todolistId) {\n                        return {...tl, title: action.newTitle}\n                    } else {\n                        return tl\n                    }\n                })\n            };\n\n        case SET_TASKS:\n            return {\n                ...state,\n                todolists: state.todolists.map(tl => {\n                    if (tl.id === action.todolistId) {\n                        return {...tl, tasks: action.tasks}\n                    } else {\n                        return tl;\n                    }\n                })\n            };\n\n        case ADD_TASK:\n            return {\n                ...state,\n                todolists: state.todolists.map(tl => {\n                    if (tl.id === action.todolistId) {\n                        return {...tl, tasks: [action.newTask, ...tl.tasks]}\n                    } else {\n                        return tl;\n                    }\n                })\n            };\n\n        case REMOVE_TASK:\n            return {\n                ...state,\n                todolists: state.todolists.map(tl => {\n                    if (tl.id === action.todolistId) {\n                        return {...tl, tasks: tl.tasks.filter(tl => tl.id !== action.taskId)}\n                    } else {\n                        return tl\n                    }\n                })\n            };\n\n        case CHANGE_TASK:\n            return {\n                ...state,\n                todolists: state.todolists.map(tl => {\n                    if (tl.id === action.todolistId) {\n                        return {\n                            ...tl,\n                            tasks: tl.tasks.map(t => {\n                                if (t.id === action.taskId) {\n                                    return {...t, ...action.updatedTask}\n                                } else {\n                                    return t\n                                }\n                            }),\n                        }\n                    } else {\n                        return tl\n                    }\n                })\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const setTodolistAc = (todolists) => {\n    return {type: SET_TODOLIST, todolists}\n};\n\nexport const addTodolistAC = (newTodolist) => {\n    return {type: ADD_TODOLIST, newTodolist}\n};\n\nexport const removeTodolistAC = (todolistId) => {\n    return {type: REMOVE_TODOLIST, todolistId}\n};\n\nexport const setTaskAC = (tasks, todolistId) => {\n    return {type: SET_TASKS, tasks, todolistId}\n};\n\nexport const addTaskAC = (todolistId, newTask) => {\n    return {type: ADD_TASK, todolistId, newTask}\n};\n\nexport const updateTaskAC = (todolistId, taskId, updatedTask) => {\n    return {type: CHANGE_TASK, todolistId, taskId, updatedTask}\n};\n\nexport const removeTaskAC = (todolistId, taskId) => {\n    return {type: REMOVE_TASK, todolistId, taskId}\n};\n\nexport const changeTodolistTitleAC = (todolistId, newTitle) => {\n    return {type: CHANGE_TODOLIST_TITLE, todolistId, newTitle}\n};\n\nexport const getTodolistsTC = () => {\n    return (dispatch) => {\n        api.getTodolists()\n            .then(res => {\n            dispatch(setTodolistAc(res.data))\n        })\n    }\n};\n\nexport const addTodolistTC = (newTodolist) => {\n    return (dispatch) => {\n        api.addTodoList(newTodolist)\n            .then(res => {\n            let newTodolist = res.data.data.item;\n            dispatch(addTodolistAC(newTodolist))\n        })\n    };\n};\n\nexport const changeTodolistTitleTC = (todolistId, newTitle) => {\n    return (dispatch) => {\n        api.changeTodolistTitle(todolistId, newTitle)\n            .then(res => {\n                dispatch(changeTodolistTitleAC(todolistId, newTitle))\n            })\n    }\n};\n\nexport const getTasksTC = (taskId) => {\n    return (dispatch) => {\n        api.getTasks(taskId)\n            .then(res => {\n            let allTasks = res.data.items;\n            dispatch(setTaskAC(allTasks, taskId));\n        })\n    }\n};\n\nexport const addTaskTC = (todolistId, newTask) => {\n    return (dispatch) => {\n        api.addItem(todolistId, newTask)\n           .then(res => {\n               let newTitle = res.data.data.item;\n               dispatch(addTaskAC(todolistId, newTitle))\n           });\n    }\n};\n\nexport const updateTaskTC = (todolistId, taskId, updatedTask) => {\n    return (dispatch) => {\n        api.changeTask(todolistId, taskId, updatedTask)\n            .then(res => {\n                dispatch(updateTaskAC(todolistId, taskId, updatedTask))\n            })\n    }\n};\n\nexport const removeTodolistTC = (todolistId) => {\n    return (dispatch) => {\n        api.removeTodolist(todolistId)\n            .then(res => {\n                dispatch(removeTodolistAC(todolistId))\n            })\n    }\n};\n\nexport const removeTaskTC = (todolistId, taskId) => {\n    return (dispatch) => {\n        api.removeTask(todolistId, taskId)\n            .then(res => {\n                dispatch(removeTaskAC(todolistId, taskId))\n            })\n    }\n};\n\nexport default reducer;\n","import React from 'react';\nimport './App.css';\nimport TodoListTasks from './components/TodoListTasks/TodoListTasks';\nimport TodoListFooter from './components/TodoListFooter/TodoListFooter';\nimport TodoListTitle from \"./components/TodoListHeader/TodoListTitle\";\nimport AddNewItemForm from \"./components/TodoListHeader/AddNewItemForm\";\nimport {connect} from \"react-redux\";\nimport {\n    addTaskTC,\n    changeTodolistTitleTC,\n    getTasksTC,\n    removeTaskTC,\n    removeTodolistTC,\n    updateTaskTC\n} from \"./store/reducer\";\n\nclass TodoList extends React.Component {\n\n    componentDidMount() {\n        this.restoreState()\n    }\n\n    state = {\n        tasks: [],\n        filterValue: \"All\"\n    };\n\n    changeFilter = (newFilterValue) => {\n        this.setState({\n            filterValue: newFilterValue\n        })\n    };\n\n    restoreState = () => {\n        this.props.getTasks(this.props.id);\n    };\n\n    addItem = (newTitle) => {\n        this.props.addTask(this.props.id, newTitle)\n    };\n\n    changeStatus = (taskId, status) => {\n        this.onChangeTask(taskId, {status: status})\n    };\n\n    changeTitle = (taskId, newTitle, todolistId) => {\n        this.onChangeTask(taskId, {title: newTitle}, todolistId)\n    };\n\n    onChangeTodolistTitle = (todolistId, newTitle) => {\n        this.props.changeTodolistTitle(todolistId, newTitle);\n    };\n\n    onChangeTask = (taskId, obj) => {\n\n        let task = this.props.tasks.find(t => (t.id === taskId));\n        let updatedTask = {\n            title: task.title,\n            description: task.description,\n            completed: task.completed,\n            status: task.status,\n            priority: task.priority,\n            startDate: task.startDate,\n            deadline: task.deadline,\n            ...obj\n        };\n\n        this.props.changeTask(this.props.id, taskId, updatedTask)\n    };\n\n    onRemoveTodolist = () => {\n        this.props.removeTodolist(this.props.id);\n    };\n\n    onRemoveTask = (taskId) => {\n        this.props.removeTask(this.props.id, taskId)\n    };\n\n    render = () => {\n\n        let {tasks = []} = this.props;\n\n        const getFilterTasks = (tasks) => {\n            return tasks.filter(t => {\n                    if (this.state.filterValue === 'Active') {\n                        return t.status === 0;\n                    } else if (this.state.filterValue === 'Completed') {\n                        return t.status === 2;\n                    } else {\n                        return true;\n                    }\n                }\n            )\n        };\n\n        return (\n            <div className=\"App\">\n                <div className=\"todoList\">\n\n                    <div className=\"todoList-header\">\n                        <TodoListTitle id={this.props.id}\n                                       title={this.props.title}\n                                       onRemoveTodolist={this.onRemoveTodolist}\n                                       onChangeTodolistTitle={this.onChangeTodolistTitle}/>\n\n                        <AddNewItemForm addItem={this.addItem}/>\n                    </div>\n\n                    <TodoListTasks tasks={getFilterTasks(tasks)}\n                                   changeStatus={this.changeStatus}\n                                   changeTitle={this.changeTitle}\n                                   onRemoveTask={this.onRemoveTask}/>\n\n                    <TodoListFooter filterValue={this.state.filterValue} changeFilter={this.changeFilter}/>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getTasks: (taskId) => {\n            const thunk = getTasksTC(taskId);\n            dispatch(thunk);\n        },\n        addTask: (todolistId, newTask) => {\n            const thunk = addTaskTC(todolistId, newTask);\n            dispatch(thunk);\n        },\n        changeTask: (todolistId, taskId, obj) => {\n            const thunk = updateTaskTC(todolistId, taskId, obj);\n            dispatch(thunk);\n        },\n        removeTodolist: (todolistId) => {\n            const thunk = removeTodolistTC(todolistId);\n            dispatch(thunk);\n        },\n        removeTask: (todolistId, taskId) => {\n            const thunk = removeTaskTC(todolistId, taskId);\n            dispatch(thunk);\n        },\n        changeTodolistTitle: (todolistId, newTitle) => {\n            const thunk = changeTodolistTitleTC(todolistId, newTitle);\n            dispatch(thunk);\n        }\n    }\n};\n\nconst ConnectedTodolist = connect(null, mapDispatchToProps)(TodoList);\nexport default ConnectedTodolist;","import React from 'react';\nimport './App.css';\nimport TodoList from \"./TodoList.jsx\";\nimport AddNewItemForm from \"./components/TodoListHeader/AddNewItemForm\";\nimport {connect} from \"react-redux\";\nimport {addTodolistTC, getTodolistsTC} from \"./store/reducer\";\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.restoreState()\n    }\n\n    restoreState = () => {\n        this.props.getTodolists();\n    };\n\n    addTodoList = (newTitle) => {\n        this.props.addTodolist(newTitle);\n    };\n\n    render = () => {\n        const todoLists = this.props.todolists.map(tl => <TodoList id={tl.id}\n                                                                   key={tl.id}\n                                                                   title={tl.title}\n                                                                   tasks={tl.tasks}/>);\n        return (\n            <>\n                <div className=\"mainInput\">\n                    <AddNewItemForm addItem={this.addTodoList}/>\n                </div>\n                <div className=\"App\">\n                    {todoLists}\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        todolists: state.todolists,\n        tasks: state.todolists.tasks\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addTodolist: (newTodolist) => {\n            const thunk = addTodolistTC(newTodolist);\n            dispatch(thunk)\n        },\n        getTodolists: () => {\n            const thunk = getTodolistsTC();\n            dispatch(thunk);\n        }\n    }\n};\n\nconst ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport default ConnectedApp;\n","import {applyMiddleware, createStore} from \"redux\";\nimport reducer from \"./reducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n        <Provider store={store}>\n            <App/>\n        </Provider>,\n        document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}