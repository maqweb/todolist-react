{"version":3,"sources":["assets/trash.svg","serviceWorker.js","api/api.js","store/auth-reducer.jsx","components/Login/Login.jsx","components/TodoListTasks/Task/Task.jsx","components/TodoListTasks/TodoListTasks.jsx","components/TodoListFooter/TodoListFooter.jsx","components/TodoListHeader/TodoListTitle.jsx","components/TodoListHeader/AddNewItemForm.jsx","store/reducer.js","TodoList.jsx","components/Main/Main.jsx","App.js","store/store.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","instance","axios","create","withCredentials","baseURL","headers","API-KEY","api","get","email","password","rememberMe","arguments","length","undefined","captcha","post","delete","todolistId","concat","newTitle","title","taskId","updatedTask","put","initialState","isAuth","setLogin","data","type","setAuthMe","value","authReducer","state","action","_objectSpread","Login","onChangeEmail","e","_this","setState","currentTarget","onChangePassword","onRememberMe","checked","onSendData","preventDefault","props","login","this","react_default","a","createElement","react_router","to","className","onChange","onClick","React","Component","ConnectedLogin","connect","auth","dispatch","then","res","status","Task","editMode","task","onIsDoneChanged","changeStatus","id","onTitleChanged","activateEditMode","deactivateEditMode","changeTitle","onDeleteTask","onRemoveTask","render","isDoneClass","priorityTitle","priority","onBlur","autoFocus","src","delIcon","alt","TodoListTasks","tasksElement","tasks","map","TodoListTasks_Task_Task","key","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","onHideFiltersClick","classForAll","filterValue","classForCompleted","classForActive","TodoListTitle","onChangeTodolistTitle","onRemoveTodolist","AddNewItemForm","error","onAddItemClick","trim","addItem","onInputChange","onKeyPress","errorClass","placeholder","todolists","reducer","reducer_objectSpread","tl","newTodolist","Object","toConsumableArray","filter","newTask","t","TodoList","newFilterValue","restoreState","getTasks","addTask","onChangeTask","changeTodolistTitle","obj","find","TodoList_objectSpread","description","completed","startDate","deadline","changeTask","removeTodolist","removeTask","_this$props$tasks","TodoListHeader_TodoListTitle","TodoListHeader_AddNewItemForm","components_TodoListTasks_TodoListTasks","getFilterTasks","components_TodoListFooter_TodoListFooter","ConnectedTodolist","thunk","allTasks","items","getTasksTC","item","addTaskAC","addTaskTC","updateTaskAC","updateTaskTC","removeTodolistAC","removeTodolistTC","removeTaskAC","removeTaskTC","changeTodolistTitleAC","changeTodolistTitleTC","Main","getTodolists","addTodoList","addTodolist","todoLists","src_TodoList","ConnectedMain","main","addTodolistAC","addTodolistTC","App","onLogout","logout","Fragment","react_router_dom","path","component","authMe","ConnectedApp","resultCode","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d11a0c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trash.665926e2.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.1/`,\n    headers: {'API-KEY': '6ab52400-1718-48c6-9e57-f24fa6232ed9'}\n});\n\nexport const api = {\n    authMe(){\n        return instance.get(`auth/me`)\n    },\n    login(email, password, rememberMe = false, captcha = false) {\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    },\n    getTodolists() {\n        return instance.get(`todo-lists/`)\n    },\n    getTasks(todolistId) {\n        return instance.get(`todo-lists/${todolistId}/tasks`)\n    },\n    addTodoList(newTitle) {\n        return instance.post(`todo-lists/`, {title: newTitle})\n    },\n    addItem(todolistId, newTitle) {\n        return instance.post(`todo-lists/${todolistId}/tasks`, {title: newTitle})\n    },\n    removeTodolist(todolistId) {\n        return instance.delete(`todo-lists/${todolistId}`)\n    },\n    removeTask(todolistId, taskId) {\n        return instance.delete(`todo-lists/${todolistId}/tasks/${taskId}`)\n    },\n    changeTask(todolistId, taskId, updatedTask) {\n        return instance.put(`todo-lists/${todolistId}/tasks/${taskId}`, updatedTask)\n    },\n    changeTodolistTitle(todolistId, newTitle) {\n        return instance.put(`todo-lists/${todolistId}`, {title: newTitle})\n    }\n};","import {api} from \"../api/api\";\n\nconst LOGIN = 'LOGIN';\nconst AUTH_ME = 'AUTH_ME';\n\nconst initialState = {\n    email: '',\n    password: '',\n    rememberMe: false,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case AUTH_ME:\n            return {\n                ...state,\n                isAuth: action.value\n            };\n        case LOGIN:\n            return {\n                ...state,\n                email: action.data.email,\n                password: action.data.password,\n                rememberMe: action.data.rememberMe,\n                isAuth: action.isAuth\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const setLogin = (data, isAuth) => ({type: LOGIN, data, isAuth});\nexport const setAuthMe = (value) => ({type: AUTH_ME, value});\n\nexport const authMe = () => (dispatch) => {\n    api.authMe()\n        .then(res => {\n            if (res.data.resultCode === 0) {\n                dispatch(setAuthMe(true));\n            } else {\n                dispatch(setAuthMe(false));\n            }\n        })\n};\n\nexport const login = (email, password, rememberMe) => (dispatch) => {\n    api.login(email, password, rememberMe)\n        .then(res => {\n            if (res.status === 200) {\n                dispatch(setLogin(res.data, true));\n            }\n        })\n};\n\nexport const logout = () => (dispatch) => {\n    api.logout()\n        .then(res => {\n            if (res.status === 200) {\n                dispatch(setLogin(res.data, false));\n            }\n        })\n};\n\n\nexport default authReducer;\n","import React from 'react';\nimport './../../App.css'\nimport {connect} from \"react-redux\";\nimport {login} from \"../../store/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\n\nclass Login extends React.Component {\n\n    state = {\n        email: '',\n        password: '',\n        rememberMe: false\n    };\n\n    onChangeEmail = (e) => {\n        this.setState({\n            email: e.currentTarget.value\n        })\n    };\n\n    onChangePassword = (e) => {\n        this.setState({\n            password: e.currentTarget.value\n        })\n    };\n\n    onRememberMe = (e) => {\n        this.setState({\n            rememberMe: e.currentTarget.checked\n        })\n    };\n\n    onSendData = (e) => {\n        e.preventDefault();\n        this.props.login(this.state.email, this.state.password, this.state.rememberMe)\n    };\n\n\n    render() {\n\n        if (this.props.isAuth) {\n            return <Redirect to='/main'/>\n        }\n\n        return (\n            <div>\n                <form className='form'>\n                    <input value={this.state.email}\n                           onChange={this.onChangeEmail}\n                           type=\"text\"/>\n\n                    <input value={this.state.password}\n                           onChange={this.onChangePassword}\n                           type=\"password\"/>\n                    <div>\n                        <label>\n                            <input onChange={this.onRememberMe}\n                                   checked={this.state.rememberMe} type=\"checkbox\"/>Remember me\n                        </label>\n                        <button onClick={this.onSendData}>Login</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mstp = (state) => ({\n    email: state.auth.email,\n    password: state.auth.password,\n    rememberMe: state.auth.rememberMe,\n    isAuth: state.auth.isAuth\n});\n\nconst ConnectedLogin = connect(mstp, {login})(Login);\nexport default ConnectedLogin;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport delIcon from \"../../../assets/trash.svg\";\r\n\r\nclass Task extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        title: this.props.task.title\r\n    };\r\n\r\n    onIsDoneChanged = (e) => {\r\n        let status = e.currentTarget.checked ? 2 : 0;\r\n        switch (status) {\r\n            case 2:\r\n                let trueStatus = 2;\r\n                return this.props.changeStatus(this.props.task.id, trueStatus);\r\n            default:\r\n                let falseStatus = 0;\r\n                return this.props.changeStatus(this.props.task.id, falseStatus);\r\n        }\r\n    };\r\n\r\n    onTitleChanged = (e) => {\r\n        this.setState({\r\n            title: e.currentTarget.value\r\n        })\r\n    };\r\n\r\n    activateEditMode = () => {\r\n        this.setState({editMode: true})\r\n    };\r\n\r\n    deactivateEditMode = () => {\r\n        this.props.changeTitle(this.props.task.id, this.state.title);\r\n        this.setState({editMode: false})\r\n    };\r\n\r\n    onDeleteTask = () => {\r\n        this.props.onRemoveTask(this.props.task.id);\r\n    };\r\n\r\n    render = () => {\r\n\r\n        // let priorityClass = this.props.task.priority === 'high' ? 'highPriority' :\r\n        //     this.props.task.priority === 'medium' ? 'mediumPriority' :\r\n        //         this.props.task.priority === 'low' ? 'lowPriority' : 'noPriority';\r\n\r\n        let isDoneClass = this.props.task.status === 2 ? 'done' : '';\r\n\r\n        let priorityTitle = '';\r\n        switch (this.props.task.priority) {\r\n            case 0:\r\n                priorityTitle = \"Low\";\r\n                break;\r\n            case 1:\r\n                priorityTitle = \"Middle\";\r\n                break;\r\n            case 2:\r\n                priorityTitle = \"High\";\r\n                break;\r\n            case 3:\r\n                priorityTitle = \"Urgently\";\r\n                break;\r\n            case 4:\r\n                priorityTitle = \"Later\";\r\n                break;\r\n            default:\r\n                priorityTitle = '';\r\n        }\r\n\r\n        return (\r\n            <div className='todoList-task'>\r\n                <div>\r\n                    <input type='checkbox'\r\n                           checked={this.props.task.status === 2}\r\n                           onChange={this.onIsDoneChanged}/>\r\n\r\n                    {this.state.editMode ?\r\n                        <input onBlur={this.deactivateEditMode}\r\n                               autoFocus={true}\r\n                               onChange={this.onTitleChanged}\r\n                               value={this.state.title} type=\"text\"/>\r\n\r\n                        : <span onClick={this.activateEditMode}\r\n                                className={isDoneClass}> {this.state.title}</span>}\r\n                    <span> - priority: {priorityTitle}</span>\r\n                </div>\r\n                <button className=\"btn-task\" onClick={this.onDeleteTask}>\r\n                    <img className='del-icon' src={delIcon} alt=\"\"/>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Task;\r\n\r\nTask.propTypes = {\r\n    title: PropTypes.string\r\n};","import React from \"react\";\nimport Task from \"./Task/Task\";\n\nclass TodoListTasks extends React.Component {\n\n    render = () => {\n\n        const tasksElement = this.props.tasks.map(task => {\n            return <Task key={task.id}\n                         task={task}\n                         changeStatus={this.props.changeStatus}\n                         changeTitle={this.props.changeTitle}\n                         onRemoveTask={this.props.onRemoveTask}/>\n        });\n\n        return (\n            <div className=\"todoList-tasks\">\n                {tasksElement}\n            </div>\n        );\n    }\n}\n\nexport default TodoListTasks;\n","import React from 'react';\nimport './../../App.css';\nimport PropTypes from 'prop-types';\n\nclass TodoListFooter extends React.Component {\n\n    state = {\n      isHidden: false\n    };\n\n    onAllFilterClick = () => {\n        this.props.changeFilter('All')\n    };\n    onCompletedFilterClick = () => {\n        this.props.changeFilter('Completed')\n    };\n    onActiveFilterClick = () => {\n        this.props.changeFilter('Active')\n    };\n\n    onShowFiltersClick = () => {\n        this.setState({isHidden: true})\n    };\n    onHideFiltersClick = () => {\n        this.setState({isHidden: false})\n    };\n\n    render = (props) => {\n\n        let classForAll = this.props.filterValue === \"All\" ? \"active\" : \"\";\n        let classForCompleted = this.props.filterValue === \"Completed\" ? \"active\" : \"\";\n        let classForActive = this.props.filterValue === \"Active\" ? \"active\" : \"\";\n\n        return (\n            <div className=\"todoList-footer\">\n\n                {!this.state.isHidden && <button onClick={this.onShowFiltersClick}>hide</button>}\n                {this.state.isHidden && <button onClick={this.onHideFiltersClick}>show</button>}\n\n                {!this.state.isHidden && <div className='filter-buttons'>\n                    <button onClick={this.onAllFilterClick} className={classForAll}>All</button>\n                    <button onClick={this.onCompletedFilterClick} className={classForCompleted}>Completed</button>\n                    <button onClick={this.onActiveFilterClick} className={classForActive}>Active</button>\n                </div>}\n\n\n\n            </div>\n        );\n    }\n}\n\nexport default TodoListFooter;\n\nTodoListFooter.propTypes = {\n    filterValue: PropTypes.string\n};","import React from 'react';\nimport '../../App.css'\nimport delIcon from './../../assets/trash.svg'\n\nclass TodoListTitle extends React.Component {\n\n    state = {\n        editMode: false,\n        title: this.props.title\n    };\n\n    activateEditMode = () => {\n        this.setState({editMode: true})\n    };\n\n    deactivateEditMode = () => {\n        this.setState({editMode: false});\n        this.props.onChangeTodolistTitle(this.props.id, this.state.title)\n    };\n\n    onTitleChanged = (e) => {\n        this.setState({title: e.currentTarget.value});\n    };\n\n    render = () => {\n        return (\n                <div className=\"todolist-title\">\n                    {this.state.editMode\n                        ? <input value={this.state.title}\n                                 className='editTitleInput'\n                                 onBlur={this.deactivateEditMode}\n                                 onChange={this.onTitleChanged}\n                                 autoFocus={true} type=\"text\"/>\n                        : <h3 className=\"todoList-header__title\"\n                              onClick={this.activateEditMode}>{this.state.title}</h3>}\n\n                    <button onClick={this.props.onRemoveTodolist} className=\"btn btn-title\">\n                        <img className='del-icon' src={delIcon} alt=\"\"/>\n                    </button>\n                </div>\n        );\n    }\n}\n\nexport default TodoListTitle;\n","import React from 'react';\nimport '../../App.css'\n\nclass AddNewItemForm extends React.Component {\n\n    state = {\n        error: false,\n        title: ''\n    };\n\n    onAddItemClick = () => {\n        let newTitle = this.state.title;\n        this.setState({title: ''});\n        if (newTitle.trim() === '') {\n            this.setState({\n                error: true\n            })\n        } else {\n            this.props.addItem(newTitle);\n            this.setState({\n                error: false\n            })\n        }\n    };\n\n    onInputChange = (e) => {\n        this.setState({\n            error: false,\n            title: e.currentTarget.value\n        });\n    };\n\n    onKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            this.onAddItemClick();\n            this.setState({\n                title: ''\n            })\n        }\n    };\n\n    render = () => {\n\n        let errorClass = this.state.error === true ? 'error' : '';\n\n        return (\n            <div className=\"todoList-newTaskForm\">\n\n                <input type=\"text\"\n                       onChange={this.onInputChange}\n                       onKeyPress={this.onKeyPress}\n                       className={`input ${errorClass}`}\n                       value={this.state.title}\n                       placeholder=\"New item name\"/>\n\n                <button onClick={this.onAddItemClick}>Add</button>\n            </div>\n        );\n    }\n}\n\nexport default AddNewItemForm;\n\n","import {api} from \"../api/api\";\n\nexport const ADD_TODOLIST = 'ADD-TODOLIST';\nexport const REMOVE_TODOLIST = 'REMOVE-TODOLIST';\nexport const ADD_TASK = 'ADD-TASK';\nexport const SET_TASKS = 'SET_TASKS';\nexport const REMOVE_TASK = 'REMOVE-TASK';\nexport const CHANGE_TASK = 'CHANGE-TASK';\nexport const SET_TODOLIST = 'SET_TODOLIST';\nexport const CHANGE_TODOLIST_TITLE = 'CHANGE_TODOLIST_TITLE';\n\nconst initialState = {\n    todolists: []\n};\n\nconst reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case SET_TODOLIST:\n            return {\n                ...state,\n                todolists: action.todolists.map(tl => ({...tl, tasks: []}))\n            };\n\n        case ADD_TODOLIST:\n            return {\n                ...state,\n                todolists: [action.newTodolist, ...state.todolists]\n            };\n\n        case REMOVE_TODOLIST:\n            return {\n                ...state,\n                todolists: state.todolists.filter(tl => tl.id !== action.todolistId)\n            };\n\n        case CHANGE_TODOLIST_TITLE:\n            return {\n                ...state,\n                todolists: state.todolists.map(tl => {\n                    if (tl.id === action.todolistId) {\n                        return {...tl, title: action.newTitle}\n                    } else {\n                        return tl\n                    }\n                })\n            };\n\n        case SET_TASKS:\n            return {\n                ...state,\n                todolists: state.todolists.map(tl => {\n                    if (tl.id === action.todolistId) {\n                        return {...tl, tasks: action.tasks}\n                    } else {\n                        return tl;\n                    }\n                })\n            };\n\n        case ADD_TASK:\n            return {\n                ...state,\n                todolists: state.todolists.map(tl => {\n                    if (tl.id === action.todolistId) {\n                        return {...tl, tasks: [action.newTask, ...tl.tasks]}\n                    } else {\n                        return tl;\n                    }\n                })\n            };\n\n        case REMOVE_TASK:\n            return {\n                ...state,\n                todolists: state.todolists.map(tl => {\n                    if (tl.id === action.todolistId) {\n                        return {...tl, tasks: tl.tasks.filter(tl => tl.id !== action.taskId)}\n                    } else {\n                        return tl\n                    }\n                })\n            };\n\n        case CHANGE_TASK:\n            return {\n                ...state,\n                todolists: state.todolists.map(tl => {\n                    if (tl.id === action.todolistId) {\n                        return {\n                            ...tl,\n                            tasks: tl.tasks.map(t => {\n                                if (t.id === action.taskId) {\n                                    return {...t, ...action.updatedTask}\n                                } else {\n                                    return t\n                                }\n                            }),\n                        }\n                    } else {\n                        return tl\n                    }\n                })\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const setTodolistAc = (todolists) => {\n    return {type: SET_TODOLIST, todolists}\n};\n\nexport const addTodolistAC = (newTodolist) => {\n    return {type: ADD_TODOLIST, newTodolist}\n};\n\nexport const removeTodolistAC = (todolistId) => {\n    return {type: REMOVE_TODOLIST, todolistId}\n};\n\nexport const setTaskAC = (tasks, todolistId) => {\n    return {type: SET_TASKS, tasks, todolistId}\n};\n\nexport const addTaskAC = (todolistId, newTask) => {\n    return {type: ADD_TASK, todolistId, newTask}\n};\n\nexport const updateTaskAC = (todolistId, taskId, updatedTask) => {\n    return {type: CHANGE_TASK, todolistId, taskId, updatedTask}\n};\n\nexport const removeTaskAC = (todolistId, taskId) => {\n    return {type: REMOVE_TASK, todolistId, taskId}\n};\n\nexport const changeTodolistTitleAC = (todolistId, newTitle) => {\n    return {type: CHANGE_TODOLIST_TITLE, todolistId, newTitle}\n};\n\nexport const getTodolistsTC = () => {\n    return (dispatch) => {\n        api.getTodolists()\n            .then(res => {\n            dispatch(setTodolistAc(res.data))\n        })\n    }\n};\n\nexport const addTodolistTC = (newTodolist) => {\n    return (dispatch) => {\n        api.addTodoList(newTodolist)\n            .then(res => {\n            let newTodolist = res.data.data.item;\n            dispatch(addTodolistAC(newTodolist))\n        })\n    };\n};\n\nexport const changeTodolistTitleTC = (todolistId, newTitle) => {\n    return (dispatch) => {\n        api.changeTodolistTitle(todolistId, newTitle)\n            .then(res => {\n                dispatch(changeTodolistTitleAC(todolistId, newTitle))\n            })\n    }\n};\n\nexport const getTasksTC = (taskId) => {\n    return (dispatch) => {\n        api.getTasks(taskId)\n            .then(res => {\n            let allTasks = res.data.items;\n            dispatch(setTaskAC(allTasks, taskId));\n        })\n    }\n};\n\nexport const addTaskTC = (todolistId, newTask) => {\n    return (dispatch) => {\n        api.addItem(todolistId, newTask)\n           .then(res => {\n               let newTitle = res.data.data.item;\n               dispatch(addTaskAC(todolistId, newTitle))\n           });\n    }\n};\n\nexport const updateTaskTC = (todolistId, taskId, updatedTask) => {\n    return (dispatch) => {\n        api.changeTask(todolistId, taskId, updatedTask)\n            .then(res => {\n                dispatch(updateTaskAC(todolistId, taskId, updatedTask))\n            })\n    }\n};\n\nexport const removeTodolistTC = (todolistId) => {\n    return (dispatch) => {\n        api.removeTodolist(todolistId)\n            .then(res => {\n                dispatch(removeTodolistAC(todolistId))\n            })\n    }\n};\n\nexport const removeTaskTC = (todolistId, taskId) => {\n    return (dispatch) => {\n        api.removeTask(todolistId, taskId)\n            .then(res => {\n                dispatch(removeTaskAC(todolistId, taskId))\n            })\n    }\n};\n\nexport default reducer;\n","import React from 'react';\nimport './App.css';\nimport TodoListTasks from './components/TodoListTasks/TodoListTasks';\nimport TodoListFooter from './components/TodoListFooter/TodoListFooter';\nimport TodoListTitle from \"./components/TodoListHeader/TodoListTitle\";\nimport AddNewItemForm from \"./components/TodoListHeader/AddNewItemForm\";\nimport {connect} from \"react-redux\";\nimport {\n    addTaskTC,\n    changeTodolistTitleTC,\n    getTasksTC,\n    removeTaskTC,\n    removeTodolistTC,\n    updateTaskTC\n} from \"./store/reducer\";\n\nclass TodoList extends React.Component {\n\n    componentDidMount() {\n        this.restoreState()\n    }\n\n    state = {\n        tasks: [],\n        filterValue: \"All\"\n    };\n\n    changeFilter = (newFilterValue) => {\n        this.setState({\n            filterValue: newFilterValue\n        })\n    };\n\n    restoreState = () => {\n        this.props.getTasks(this.props.id);\n    };\n\n    addItem = (newTitle) => {\n        this.props.addTask(this.props.id, newTitle)\n    };\n\n    changeStatus = (taskId, status) => {\n        this.onChangeTask(taskId, {status: status})\n    };\n\n    changeTitle = (taskId, newTitle) => {\n        this.onChangeTask(taskId, {title: newTitle})\n    };\n\n    onChangeTodolistTitle = (todolistId, newTitle) => {\n        this.props.changeTodolistTitle(todolistId, newTitle);\n    };\n\n    onChangeTask = (taskId, obj) => {\n\n        let task = this.props.tasks.find(t => (t.id === taskId));\n        let updatedTask = {\n            title: task.title,\n            description: task.description,\n            completed: task.completed,\n            status: task.status,\n            priority: task.priority,\n            startDate: task.startDate,\n            deadline: task.deadline,\n            ...obj\n        };\n\n        this.props.changeTask(this.props.id, taskId, updatedTask)\n    };\n\n    onRemoveTodolist = () => {\n        this.props.removeTodolist(this.props.id);\n    };\n\n    onRemoveTask = (taskId) => {\n        this.props.removeTask(this.props.id, taskId)\n    };\n\n    render = () => {\n\n        let {tasks = []} = this.props;\n\n        const getFilterTasks = (tasks) => {\n            return tasks.filter(t => {\n                    if (this.state.filterValue === 'Active') {\n                        return t.status === 0;\n                    } else if (this.state.filterValue === 'Completed') {\n                        return t.status === 2;\n                    } else {\n                        return true;\n                    }\n                }\n            )\n        };\n\n        return (\n            <div className=\"App\">\n                <div className=\"todoList\">\n\n                    <div className=\"todoList-header\">\n                        <TodoListTitle id={this.props.id}\n                                       title={this.props.title}\n                                       onRemoveTodolist={this.onRemoveTodolist}\n                                       onChangeTodolistTitle={this.onChangeTodolistTitle}/>\n\n                        <AddNewItemForm addItem={this.addItem}/>\n                    </div>\n\n                    <TodoListTasks tasks={getFilterTasks(tasks)}\n                                   changeStatus={this.changeStatus}\n                                   changeTitle={this.changeTitle}\n                                   onRemoveTask={this.onRemoveTask}/>\n\n                    <TodoListFooter filterValue={this.state.filterValue} changeFilter={this.changeFilter}/>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getTasks: (taskId) => {\n            const thunk = getTasksTC(taskId);\n            dispatch(thunk);\n        },\n        addTask: (todolistId, newTask) => {\n            const thunk = addTaskTC(todolistId, newTask);\n            dispatch(thunk);\n        },\n        changeTask: (todolistId, taskId, obj) => {\n            const thunk = updateTaskTC(todolistId, taskId, obj);\n            dispatch(thunk);\n        },\n        removeTodolist: (todolistId) => {\n            const thunk = removeTodolistTC(todolistId);\n            dispatch(thunk);\n        },\n        removeTask: (todolistId, taskId) => {\n            const thunk = removeTaskTC(todolistId, taskId);\n            dispatch(thunk);\n        },\n        changeTodolistTitle: (todolistId, newTitle) => {\n            const thunk = changeTodolistTitleTC(todolistId, newTitle);\n            dispatch(thunk);\n        }\n    }\n};\n\nconst ConnectedTodolist = connect(null, mapDispatchToProps)(TodoList);\nexport default ConnectedTodolist;","import React, {Component} from 'react';\nimport './../../App.css';\nimport TodoList from \"./../../TodoList.jsx\";\nimport AddNewItemForm from \"./../../components/TodoListHeader/AddNewItemForm\";\nimport {connect} from \"react-redux\";\nimport {addTodolistTC, getTodolistsTC} from \"./../../store/reducer\";\nimport {Redirect} from \"react-router-dom\";\n\nclass Main extends Component {\n    componentDidMount() {\n        this.restoreState()\n    }\n\n    restoreState = () => {\n        this.props.getTodolists();\n    };\n\n    addTodoList = (newTitle) => {\n        this.props.addTodolist(newTitle);\n    };\n\n    render() {\n\n        if (!this.props.isAuth) {\n            return <Redirect to='/login'/>\n        }\n\n        const todoLists = this.props.todolists.map(tl => <TodoList id={tl.id}\n                                                                   key={tl.id}\n                                                                   title={tl.title}\n                                                                   tasks={tl.tasks}/>);\n        return (\n            <div>\n                <div className=\"mainInput\">\n                    <AddNewItemForm addItem={this.addTodoList}/>\n                </div>\n                <div className=\"App\">\n                    {todoLists}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        todolists: state.main.todolists,\n        tasks: state.main.todolists.tasks,\n        isAuth: state.auth.isAuth\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addTodolist: (newTodolist) => {\n            const thunk = addTodolistTC(newTodolist);\n            dispatch(thunk)\n        },\n        getTodolists: () => {\n            const thunk = getTodolistsTC();\n            dispatch(thunk);\n        }\n    }\n};\n\nconst ConnectedMain = connect(mapStateToProps, mapDispatchToProps)(Main);\nexport default ConnectedMain;","import React from 'react';\nimport './App.css';\nimport Login from \"./components/Login/Login\";\nimport {NavLink, Route} from \"react-router-dom\";\nimport Main from \"./components/Main/Main\";\nimport {connect} from \"react-redux\";\nimport {authMe, logout} from \"./store/auth-reducer\";\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.authMe()\n    }\n\n    onLogout = () => {\n        this.props.logout()\n    };\n\n\n    render = () => {\n\n        return (\n            <>\n                <div>\n\n                    {this.props.isAuth\n                        ? <button onClick={this.onLogout}>Logout</button>\n                        : <NavLink to=\"/login\">Login</NavLink>\n                    }\n                    <NavLink to=\"/main\">Todolist</NavLink>\n\n                </div>\n                <div className=\"content\">\n                    <Route path='/login' component={Login}/>\n                    <Route path='/main' component={Main}/>\n                </div>\n            </>\n        );\n    }\n}\n\nconst mstp = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nconst ConnectedApp = connect(mstp, {authMe, logout})(App);\nexport default ConnectedApp;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport reducer from \"./reducer\";\nimport thunkMiddleware from 'redux-thunk'\nimport authReducer from \"./auth-reducer\";\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    main: reducer\n});\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}